
Процедура ВыполнитьУстановку() Экспорт
	
	Блокировка = Новый БлокировкаСеансов;
	Блокировка.Начало           = НачалоБлокировки;
	Блокировка.Конец            = ОкончаниеБлокировки;
	Блокировка.Сообщение        = СоединенияИБ.СформироватьСообщениеБлокировки(Сообщение, КодРазрешения); 
	Блокировка.Установлена      = УстановитьБлокировкуСоединений;
	Блокировка.КодРазрешения    = КодРазрешения;
	
	УстановитьБлокировкуСеансов(Блокировка);
	
	ПараметрыАдминистрированияИБ = СформироватьПараметрыАдминистрированияИБ();
	СоединенияИБ.ЗаписатьПараметрыАдминистрированияИБ(ПараметрыАдминистрированияИБ);
	
КонецПроцедуры

Процедура ПолучитьПараметрыБлокировки() Экспорт
	
	ТекущийРежим = ПолучитьБлокировкуСеансов();
	
	УстановитьБлокировкуСоединений = ТекущийРежим.Установлена;
	Сообщение                      = СоединенияИБКлиентСервер.ИзвлечьСообщениеБлокировки(ТекущийРежим.Сообщение);
	КодРазрешения                  = ТекущийРежим.КодРазрешения;
	
	Если УстановитьБлокировкуСоединений Тогда
		НачалоБлокировки           = ТекущийРежим.Начало;
		ОкончаниеБлокировки        = ТекущийРежим.Конец;
	Иначе	
		// Если блокировка не установлена, можно предположить, что
		// пользователь открыл форму для установки блокировки.
		// Поэтому устанавливаем дату блокировки равной текущей дате
		НачалоБлокировки           = ТекущаяДата();
	КонецЕсли;

	ПараметрыАдминистрированияИБ = СоединенияИБ.ПолучитьПараметрыАдминистрированияИБ();
    АдминистраторИБ              = Справочники.Пользователи.НайтиПоКоду(ПараметрыАдминистрированияИБ.ИмяАдминистратораИБ);
	ПарольАдминистратораИБ       = ПараметрыАдминистрированияИБ.ПарольАдминистратораИБ;
	ИмяАдминистратораКластера    = ПараметрыАдминистрированияИБ.ИмяАдминистратораКластера;
	ПарольАдминистратораКластера = ПараметрыАдминистрированияИБ.ПарольАдминистратораКластера;
	ПортКластераСерверов         = ПараметрыАдминистрированияИБ.ПортКластераСерверов;
	ПортАгентаСервера            = ПараметрыАдминистрированияИБ.ПортАгентаСервера;
	НестандартныеПорты           = ПортКластераСерверов <> 0 ИЛИ ПортАгентаСервера <> 0;
	КластерТребуетАвторизации    = НЕ ПустаяСтрока(ИмяАдминистратораКластера);

КонецПроцедуры

Процедура ПроверитьПредусловияБлокировки() Экспорт
	
	ЭтаИБФайловая = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	Если ЭтаИБФайловая Тогда
		НазванияСоединенийИБ = "";
		Если НЕ АктивныТолькоКлиентскиеПриложения(НазванияСоединенийИБ) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Существуют активные соединения, которые невозможно завершить. Блокировка не установлена.
					|%1'"), 
				НазванияСоединенийИБ);
			ВызватьИсключение ТекстСообщения;	
		КонецЕсли;
	Иначе	
		ПараметрыАдминистрированияИБ = СформироватьПараметрыАдминистрированияИБ();
		СоединенияИБ.ПроверитьПараметрыАдминистрированияИБ(ПараметрыАдминистрированияИБ, Истина);
	КонецЕсли;

КонецПроцедуры

Функция АктивныТолькоКлиентскиеПриложения(НазванияСоединенийИБ) 
	
	Результат = Истина;
	НазванияСоединенийИБ = "";
	Для каждого Соединение Из ПолучитьСоединенияИнформационнойБазы() Цикл
		Если Соединение.НомерСоединения = НомерСоединенияИнформационнойБазы() Тогда
			Продолжить;
		КонецЕсли;
		Если Соединение.ИмяПриложения <> "1CV8" И Соединение.ИмяПриложения <> "1CV8C" И
			Соединение.ИмяПриложения <> "WebClient" Тогда
			НазванияСоединенийИБ = НазванияСоединенийИБ + Символы.ПС + " - " + Соединение;
			Результат = Ложь;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьПараметрыАдминистрированияИБ() 

	ПараметрыАдминистрированияИБ = СоединенияИБ.ПолучитьПараметрыАдминистрированияИБ();
	ПараметрыАдминистрированияИБ.ИмяАдминистратораИБ = СокрЛП(АдминистраторИБ.Код);
	ПараметрыАдминистрированияИБ.ПарольАдминистратораИБ = ПарольАдминистратораИБ;
	Если КластерТребуетАвторизации Тогда
		ПараметрыАдминистрированияИБ.ИмяАдминистратораКластера = ИмяАдминистратораКластера;
		ПараметрыАдминистрированияИБ.ПарольАдминистратораКластера = ПарольАдминистратораКластера;
	Иначе	
		ПараметрыАдминистрированияИБ.ИмяАдминистратораКластера = "";
		ПараметрыАдминистрированияИБ.ПарольАдминистратораКластера = "";
	КонецЕсли;	
	Если НестандартныеПорты Тогда
		ПараметрыАдминистрированияИБ.ПортКластераСерверов = ПортКластераСерверов;
		ПараметрыАдминистрированияИБ.ПортАгентаСервера = ПортАгентаСервера;
	Иначе	
		ПараметрыАдминистрированияИБ.ПортКластераСерверов = 0;
		ПараметрыАдминистрированияИБ.ПортАгентаСервера = 0;
	КонецЕсли;	
	
	Возврат ПараметрыАдминистрированияИБ;
	
КонецФункции