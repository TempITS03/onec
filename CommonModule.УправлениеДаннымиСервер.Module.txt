
Процедура ВызватьОбработчикОбновленияКурсаВалют() Экспорт
	
	Если РольДоступна("Клиент") Тогда 
		Возврат;
	КонецЕсли;	
	
	Если Константы.ОбработатьКурсыСРБК.Получить() Тогда
		
		Банк = "РБК";
		ОбработкаКурсыВалют = Обработки.КурсыВалютРБК.Создать();
		ОбработкаКурсыВалют.НачалоПериодаЗагрузки = НачалоДня(ТекущаяДата());
		ОбработкаКурсыВалют.ОкончаниеПериодаЗагрузки = КонецДня(ТекущаяДата());
		
	Иначе	
		
		Банк = "НБУ";
		ОбработкаКурсыВалют = Обработки.КурсыВалютНБУ.Создать();
		
	КонецЕсли;
	
	СообщениеОбОшибке = "Ошибка автоматической загрузки курса валют из "+Банк;
	ОбработкаКурсыВалют.ЗаполнитьСписокВалют();
	ОбработкаКурсыВалют.ЗагрузитьКурсыВалют(СообщениеОбОшибке);
		
КонецПроцедуры	

Процедура ОбойтиСтроки(Строки)
	
	Для Каждого СтрокаДерева Из Строки Цикл
		СтрокаДерева.ОбъектОбслуживания = ?(ЗначениеЗаполнено(СтрокаДерева.Объект), СтрокаДерева.Объект, СтрокаДерева.Подразделение);
		СтрокаДерева.Владелец = ?(ЗначениеЗаполнено(СтрокаДерева.Владелец),СтрокаДерева.Владелец,СтрокаДерева.Подразделение);
		
		Если ТипЗнч(СтрокаДерева.ОбъектОбслуживания) = Тип("СправочникСсылка.ОбъектыОбслуживания") Тогда
			СтрокаДерева.НомерКартинки = 1;
		КонецЕсли;
		
		ОбойтиСтроки(СтрокаДерева.Строки);
	КонецЦикла;
	
КонецПроцедуры

//
//
Функция ПолучитьДеревоДляРедактирования(Контрагент)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЛОЖЬ КАК Пометка,
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.ОбъектОбслуживания КАК Объект,
	|	ВложенныйЗапрос.Владелец
	|ИЗ
	|	(ВЫБРАТЬ
	|		Подразделения.Ссылка КАК Подразделение,
	|		НазначениеОбъектов.ОбъектОбслуживания КАК ОбъектОбслуживания,
	|		Подразделения.Ссылка КАК Владелец
	|	ИЗ
	|		Справочник.Подразделения КАК Подразделения
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НазначениеОбъектов КАК НазначениеОбъектов
	|			ПО Подразделения.Ссылка = НазначениеОбъектов.Подразделение
	|	ГДЕ
	|		Подразделения.Владелец = &Контрагент) КАК ВложенныйЗапрос
	|ИТОГИ ПО
	|	Подразделение ИЕРАРХИЯ");
						  
	Запрос.УстановитьПараметр("Контрагент",Контрагент);					  
	Дерево = Новый ДеревоЗначений;
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Дерево.Колонки.Добавить("ОбъектОбслуживания", Новый ОписаниеТипов("СправочникСсылка.Подразделения,СправочникСсылка.ОбъектыОбслуживания"));
	Дерево.Колонки.Добавить("НомерКартинки",ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(1));
	ОбойтиСтроки(Дерево.Строки);
	
	Возврат Дерево;
	
КонецФункции	

// Заполнить дерево значений свойств на форме объекта
Функция ЗаполнитьДеревоЗначенийСвойств(Контрагент) Экспорт
	
	Дерево = ПолучитьДеревоДляРедактирования(Контрагент);
	
	Возврат Дерево;
	
КонецФункции

//Получение текущих актуальных задач для оповещения
Функция ПолучениеТекущихАктуальныхЗадачДляОповещения(ОписательОповещения) Экспорт
	
	ТекущийПользователь = ОбщегоНазначения.ПолучитьЗначениеПеременной("глТекущийПользователь");
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	АктуальныеЗадачиДляОповещения.Значение
	|ИЗ
	|	РегистрСведений.АктуальныеЗадачиДляОповещения КАК АктуальныеЗадачиДляОповещения
	|ГДЕ
	|	АктуальныеЗадачиДляОповещения.Пользователь = &Пользователь
	|	И АктуальныеЗадачиДляОповещения.ОписательОповещения = &ОписательОповещения");
	
	Запрос.УстановитьПараметр("Пользователь",ТекущийПользователь);
	Запрос.УстановитьПараметр("ОписательОповещения",ОписательОповещения);
	ОбходЗапроса = Запрос.Выполнить().Выбрать();
	Пока ОбходЗапроса.Следующий() Цикл
		СтрНавигации = ПолучитьНавигационнуюСсылку(ОбходЗапроса.Значение);
		Возврат СтрНавигации;
	КонецЦикла;	
	
КонецФункции	

Функция ПолучитьПараметрыУчета() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ *
	                      |ИЗ
	                      |	Константы КАК Константы");
						  
	РезЗапр = Запрос.Выполнить();
	Выборка = РезЗапр.Выбрать();
	Выборка.Следующий();
	Табл = РезЗапр.Выгрузить();
	СтруктураПараметров = Новый Структура();
	
	Для Каждого ОбходКолонок Из Табл.Колонки Цикл
		
		СтруктураПараметров.Вставить(ОбходКолонок.Имя,Выборка[ОбходКолонок.Имя]);
		
	КонецЦикла;	
	
	Возврат СтруктураПараметров;
	
КонецФункции	