////////////////////////////////////////////////////////////////////////////////
// Обработчики команд

&НаКлиенте
Процедура ЗаписатьВыполнить()
	
	ОчиститьСообщения();
	
	Если Объект.УстановитьБлокировкуСоединений Тогда
		
		// проверки возможности установки блокировки
		Если ЗначениеЗаполнено(Объект.ОкончаниеБлокировки) И Объект.НачалоБлокировки > Объект.ОкончаниеБлокировки Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата окончания блокировки не может быть меньше даты начала блокировки. Блокировка не установлена.'"));
			Возврат;
		КонецЕсли;
		
		Попытка
			ПроверитьПредусловияБлокировки();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИнформацияОбОшибке().Описание);
			Возврат;
		КонецПопытки;
		
		ТекстВопроса = НСтр("ru = 'После установки блокировки в информационной базе будет запущен
		                          |режим завершения работы всех пользователей (включая Вас)
		                          |на период действия блокировки.
		                          |Вы действительно хотите установить блокировку?'");
		
		ЗаголовокВопроса = НСтр("ru = 'Установка блокировки соединений с информационной базой'");
		
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 60, КодВозвратаДиалога.Нет,
		               ЗаголовокВопроса);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьСнятьБлокировку();
	
	СоединенияИБКлиент.УстановитьОбработчикиОжиданияЗавершенияРаботыПользователей(
		Объект.УстановитьБлокировкуСоединений);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры

&НаКлиенте
Процедура УстановитьСостояниеПолей()
	
	Если Элементы.ГруппаПодключениеКСерверу.Доступность Тогда
		Элементы.ГруппаПорты.Доступность = Объект.НестандартныеПорты;
		Элементы.ГруппаАвторизацияКластера.Доступность = Объект.КластерТребуетАвторизации;
	КонецЕсли; 
	
КонецПроцедуры
	
&НаСервере
Процедура ПроверитьПредусловияБлокировки() 
	
	РеквизитФормыВЗначение("Объект").ПроверитьПредусловияБлокировки();

КонецПроцедуры

&НаСервере
Процедура УстановитьСнятьБлокировку()
	
	РеквизитФормыВЗначение("Объект").ВыполнитьУстановку();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ПолучитьПараметрыБлокировки();
	
	ЭтаИБФайловая = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	Элементы.ГруппаПодключениеКСерверу.Доступность = НЕ ЭтаИБФайловая;
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ?(ЭтаИБФайловая, ОтображениеСтраницФормы.Нет, ОтображениеСтраницФормы.ЗакладкиСверху);
	
	Если НЕ ЭтаИБФайловая Тогда
		
		ЗапрашиватьАдминистратораИБ = ПользователиИнформационнойБазы.ПолучитьПользователей().Количество() > 0;
		Элементы.ГруппаАдминистрирование.Доступность = ЗапрашиватьАдминистратораИБ;
		
		COMСоединитель = Новый COMОбъект(ОбщегоНазначения.ИмяCOMСоединителя());
		Если Обработка.ПортКластераСерверов = 0 Тогда
			Обработка.ПортКластераСерверов = COMСоединитель.RMngrPortDefault;
		КонецЕсли;
		
		Если Обработка.ПортАгентаСервера = 0 Тогда
			Обработка.ПортАгентаСервера = COMСоединитель.RAgentPortDefault;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Обработка, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьСостояниеПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура КластерТребуетАвторизацииПриИзменении(Элемент)
	
	УстановитьСостояниеПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура НестандартныеПортыПриИзменении(Элемент)
	
	УстановитьСостояниеПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура АктивныеПользователи(Команда)
	ОткрытьФорму("обработка.СписокАктивныхПользователей.Форма",,ЭтаФорма);
КонецПроцедуры
