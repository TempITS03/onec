// Переменные, используемые в процедурах контроля остатков
Перем МетаданныеДокумента, ИмяДокумента, ИмяТабличнойЧасти, ИмяТаблицы, СтруктураШапкиДокумента, Отказ;
Перем ДокументСсылка;


// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщение.
//
// Параметры:
//  ДокументОбъект     - объект проводимого документа, 
//  ИмяТабЧасти        - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапки     - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  ОтказПроведения    - флаг отказа в проведении,
//  ЗаголовокСообщения - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабЧасти, СтруктураШапки, ОтказПроведения) Экспорт

	Если ИмяТабЧасти <> "" Тогда  //Имя таб части может быть не указана для документа КомплектацияНоменклатуры с видом операции Разукомплектация
		Если ДокументОбъект[ИмяТабЧасти].Количество()=0 Тогда //если в таб.части ничего нет - не надо проверять
			Возврат;
		КонецЕсли;
	КонецЕсли;

	//Если УправлениеДопПравамиПользователей.РазрешеноПревышениеОстаткаТоваровНаСкладе() Тогда
	//	Возврат;
	//КонецЕсли;

	СтруктураШапкиДокумента = СтруктураШапки;
	ИмяТабличнойЧасти       = ИмяТабЧасти;
	Отказ                   = ОтказПроведения;

	
	ДокументСсылка		= ДокументОбъект.Ссылка;
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;

	Если ИмяТабЧасти <>"" Тогда
		ИмяТаблицы = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	Иначе
		ИмяТаблицы = ИмяДокумента;
	КонецЕсли;

	Если ИмяДокумента = "ВыплатаЗП" Тогда
		КонтрольОстатков_ВыплатаЗП();
	Иначе
		 Сообщить("Для документа "+ДокументОбъект+" не предусмотрен вызов процедуры 'Контроль остатков' модуля регистра 'РасчетыССотрудниками'");
	КонецЕсли;
	
	//вернем обратно признак отказа от проведения документа 
	ОтказПроведения = Отказ;

КонецПроцедуры // КонтрольОстатков()

Процедура КонтрольОстатков_ВыплатаЗП() 
	
	Запрос = Новый Запрос();
	
	Текст = "ВЫБРАТЬ
	|	ВыплатаЗП.Сотрудник,
	|	ВыплатаЗП.ВидРасчета,
	|	ВыплатаЗП.Валюта,
	|	СУММА(РасчетыССотрудникамиОстатки.КоличествоЧасовОстаток) КАК КоличествоЧасовОстаток,
	|	СУММА(ВыплатаЗП.КоличествоЧасов) КАК КоличествоЧасовПоДокументу,
	|	СУММА(ЕСТЬNULL(РасчетыССотрудникамиОстатки.КоличествоЧасовОстаток, 0) - ВыплатаЗП.КоличествоЧасов) КАК Разница
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыплатаЗППлатежи.Сотрудник КАК Сотрудник,
	|		ВыплатаЗППлатежи.ВидРасчета КАК ВидРасчета,
	|		ВыплатаЗППлатежи.Валюта КАК Валюта,
	|		СУММА(ВыплатаЗППлатежи.КоличествоЧасов) КАК КоличествоЧасов
	|	ИЗ
	|		Документ.ВыплатаЗП.Платежи КАК ВыплатаЗППлатежи
	|	ГДЕ
	|		ВыплатаЗППлатежи.Ссылка = &Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВыплатаЗППлатежи.Сотрудник,
	|		ВыплатаЗППлатежи.ВидРасчета,
	|		ВыплатаЗППлатежи.Валюта) КАК ВыплатаЗП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыССотрудниками.Остатки(
	|				,
	|				Организация = &Организация
	|					И Сотрудник В (&Сотрудник)) КАК РасчетыССотрудникамиОстатки
	|		ПО ВыплатаЗП.Сотрудник = РасчетыССотрудникамиОстатки.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаЗП.Сотрудник,
	|	ВыплатаЗП.ВидРасчета,
	|	ВыплатаЗП.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(РасчетыССотрудникамиОстатки.КоличествоЧасовОстаток, 0) - ВыплатаЗП.КоличествоЧасов) < 0
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.РасчетыССотрудниками.Остатки";
	
	Запрос.Текст = Текст;
	
	МассивСотрудник = ДокументСсылка.Платежи.ВыгрузитьКолонку("Сотрудник");
	
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.УстановитьПараметр("Сотрудник",МассивСотрудник);
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Отказ = Истина;
		
		Сообщить("По: " + СокрЛП(Выборка.Сотрудник) + " количество часов декларированно программистом: " + Выборка.КоличествоЧасовОстаток + Символы.ПС
						+ "часов указано на погашение: " + Выборка.КоличествоЧасовПоДокументу + Символы.ПС 
						+ "разница недостачи: " + Выборка.Разница,СтатусСообщения.Важное);

						
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Документ не проведен: " + Строка(ДокументСсылка);
		Сообщение.КлючДанных = Выборка.Сотрудник;
		Сообщение.Сообщить();

	КонецЦикла;

	
КонецПроцедуры	

