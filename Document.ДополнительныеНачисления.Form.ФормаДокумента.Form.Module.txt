
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПараметрыОпций = Новый Структура("Организация", Объект.Организация);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыОпций);
	
	Если Не ПустаяСтрока(Объект.Номер) Тогда
		Объект.Номер = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() и Объект.Организация.Пустая() Тогда
		
		Объект.Организация = ЗаполнениеОсновныхПараметровДокументов.ПолучитьОсновнуюОрганизациюПоТекущемуПользователю();
		
	КонецЕсли;	
	
	Если Параметры.Ключ.Пустая() Тогда 
		
		ПараметрыОпций = Новый Структура("Организация", Объект.Организация);
		УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыОпций);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПараметрыОпций = Новый Структура("Организация", Объект.Организация);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыОпций);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыОпций = Новый Структура("Организация", Объект.Организация);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыОпций);

КонецПроцедуры

&НаКлиенте
// Функция возвращает ссылку на текущую строку в списке платежей 
// 
// Параметры: 
//  Нет. 
// 
// Возвращаемое значение: 
//  
Функция ПолучитьТекущуюСтрокуПлатежа()
	Возврат Элементы.Платежи.ТекущиеДанные;
КонецФункции

&НаСервере
//Функция получает срез регистра сведений по шкале ставок
//	Возвращаемое значение: ВидРасчета
//
функция СрезШкалыСтавокСотрудников(Сотрудник) 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ШкалаТарифовСрезПоследних.ВидРасчета
	|ИЗ
	|	РегистрСведений.ШкалаТарифов.СрезПоследних(
	|			&ДатаСреза,
	|			Сотрудник = &Сотрудник
	|				И Организация = &Организация) КАК ШкалаТарифовСрезПоследних
	|");
	
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("ДатаСреза",КонецДня(Объект.Дата));
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Возврат Шапка.ВидРасчета;
	
КонецФункции	

&НаКлиенте
Процедура ПлатежиСотрудникПриИзменении(Элемент)
	
	ТекущиеДанныеСтроки = ПолучитьТекущуюСтрокуПлатежа();	
	ТекущиеДанныеСтроки.ВидРасчета = СрезШкалыСтавокСотрудников(ТекущиеДанныеСтроки.Сотрудник);

КонецПроцедуры

&НаСервере
//Процедура заполняет сотрудников с которым организация ведет расчеты
//
Процедура ЗаполнитьТаблицуПлатежей()
	
	Объект.Платежи.Очистить();
	
	//Сбор остатков
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ШкалаТарифовСрезПоследних.Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.ПереченьДополнительныхНачислений.Премия) КАК ВидНачисления,
	|	ШкалаТарифовСрезПоследних.ВидРасчета,
	|	ШкалаТарифовСрезПоследних.ВалютаРасчета КАК Валюта
	|ИЗ
	|	РегистрСведений.ШкалаТарифов.СрезПоследних(&МоментВремени, Организация = &Организация) КАК ШкалаТарифовСрезПоследних");

	
	Запрос.УстановитьПараметр("МоментВремени",КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	Объект.Платежи.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

 &НаСервере
//Процедура заполняет сотрудников с которым организация ведет расчеты
//
Процедура ЗаполнитьТаблицуПлатежейПремиями()
	
	Объект.Платежи.Очистить();
	
	//Сбор остатков
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ШкалаТарифов.Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.ПереченьДополнительныхНачислений.Премия) КАК ВидНачисления,
	|	ШкалаТарифов.ВидРасчета,
	|	ШкалаТарифов.ВалютаРасчета КАК Валюта,
	|	СУММА(ЕСТЬNULL(ШкалаПремий.Процент, 0) / 100 * ШкалаТарифов.ЦенаЧасаСумма) КАК СУММА
	|ИЗ
	|	РегистрСведений.ШкалаТарифов.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ВидРасчета = ЗНАЧЕНИЕ(Перечисление.ВидРасчета.Оклад)
	|				И ЦенаЧасаСумма > 0
	|				И КоличествоЧасов > 0) КАК ШкалаТарифов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РасчетыССотрудникамиОстаткиИОбороты.Организация КАК Организация,
	|			РасчетыССотрудникамиОстаткиИОбороты.Сотрудник КАК Сотрудник,
	|			РасчетыССотрудникамиОстаткиИОбороты.ВидРасчета КАК ВидРасчета,
	|			РасчетыССотрудникамиОстаткиИОбороты.Валюта КАК Валюта,
	|			СУММА(РасчетыССотрудникамиОстаткиИОбороты.КоличествоЧасовПриход) КАК КоличествоЧасовПриход
	|		ИЗ
	|			РегистрНакопления.РасчетыССотрудниками.ОстаткиИОбороты(
	|					&НачДата,
	|					&КонДата,
	|					,
	|					,
	|					Организация = &Организация
	|						И ВидРасчета = ЗНАЧЕНИЕ(Перечисление.ВидРасчета.Оклад)) КАК РасчетыССотрудникамиОстаткиИОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РасчетыССотрудникамиОстаткиИОбороты.Организация,
	|			РасчетыССотрудникамиОстаткиИОбороты.Сотрудник,
	|			РасчетыССотрудникамиОстаткиИОбороты.ВидРасчета,
	|			РасчетыССотрудникамиОстаткиИОбороты.Валюта) КАК ФактическиЗатраченоЧасов
	|		ПО ШкалаТарифов.Организация = ФактическиЗатраченоЧасов.Организация
	|			И ШкалаТарифов.Сотрудник = ФактическиЗатраченоЧасов.Сотрудник
	|			И ШкалаТарифов.ВидРасчета = ФактическиЗатраченоЧасов.ВидРасчета
	|			И ШкалаТарифов.ВалютаРасчета = ФактическиЗатраченоЧасов.Валюта
	|			И ШкалаТарифов.КоличествоЧасов < ФактическиЗатраченоЧасов.КоличествоЧасовПриход
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШкалаПремий.СрезПоследних(&КонДата, Организация = &Организация) КАК ШкалаПремий
	|		ПО ШкалаТарифов.Организация = ШкалаПремий.Организация
	|			И ШкалаТарифов.Сотрудник = ШкалаПремий.Сотрудник
	|			И (ШкалаПремий.Процент В
	|				(ВЫБРАТЬ
	|					МИНИМУМ(ШкалаСтавок.Процент)
	|				ИЗ
	|					РегистрСведений.ШкалаПремий.СрезПоследних(&КонДата, ) КАК ШкалаСтавок
	|				ГДЕ
	|					ШкалаСтавок.Сотрудник = ШкалаТарифов.Сотрудник
	|					И ШкалаСтавок.Организация = ШкалаТарифов.Организация
	|					И ФактическиЗатраченоЧасов.КоличествоЧасовПриход <= ШкалаСтавок.КоличествоЧасов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ШкалаТарифов.Сотрудник,
	|	ШкалаТарифов.ВидРасчета,
	|	ШкалаТарифов.ВалютаРасчета
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(ШкалаПремий.Процент, 0) / 100 * ШкалаТарифов.ЦенаЧасаСумма) > 0");

	
	Запрос.УстановитьПараметр("НачДата",НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("КонДата",КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	Объект.Платежи.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	


&НаКлиенте
Процедура ЗаполнитьСотрудникамиОрганизации(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Предупреждение("Необходимо выбрать организацию!");
		Возврат;
	КонецЕсли;	
	
	Если Объект.Платежи.Количество() > 0 Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		ОтветПользователя = Вопрос("Табличная часть будет очищена, продолжить?",Режим);
		
		Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;	
		
	КонецЕсли;
	
	ЗаполнитьТаблицуПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура НачислитьПремию(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Предупреждение("Необходимо выбрать организацию!");
		Возврат;
	КонецЕсли;
	
	Если Объект.Платежи.Количество() > 0 Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		ОтветПользователя = Вопрос("Табличная часть будет очищена, продолжить?",Режим);
		
		Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;	
		
	КонецЕсли;

	ЗаполнитьТаблицуПлатежейПремиями();
	
КонецПроцедуры
