
//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ 
// 

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Сбор остатков
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПоступлениеДенежныхСредствПлатежи.Ссылка.Организация,
	|	ПоступлениеДенежныхСредствПлатежи.Контрагент,
	|	ПоступлениеДенежныхСредствПлатежи.Ссылка.ВалютаВзаиморасчетов КАК Валюта,
	|	СУММА(ПоступлениеДенежныхСредствПлатежи.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ПоступлениеДенежныхСредств.Платежи КАК ПоступлениеДенежныхСредствПлатежи
	|ГДЕ
	|	ПоступлениеДенежныхСредствПлатежи.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДенежныхСредствПлатежи.Ссылка.Организация,
	|	ПоступлениеДенежныхСредствПлатежи.Контрагент,
	|	ПоступлениеДенежныхСредствПлатежи.Ссылка.ВалютаВзаиморасчетов");
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Колонки.Добавить("Период");
	Результат.Колонки.Добавить("ВидДвижения");
	
	Результат.ЗаполнитьЗначения(Дата,"Период");
	Результат.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход,"ВидДвижения");
	
	Для Каждого СтрокаРасчетаСуммы Из Результат Цикл
		
		СтрокаРасчетаСуммы.Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаРасчетаСуммы.Сумма,ВалютаДокумента,ВалютаВзаиморасчетов,
									Курс,КурсВзаиморасчетов,Кратность,КратностьВзаиморасчетов);
		
	КонецЦикла;	
	
	// Создание движения в регистре накопления  ВзаиморасчетыСКонтрагентами
	//закрываем задачи по остатку
	Движения.ВзаиморасчетыСКонтрагентами.Записывать = Истина;
	Движения.ВзаиморасчетыСКонтрагентами.Загрузить(Результат);
	
КонецПроцедуры


//Заполнить шапку документа по документу основание
//
Процедура ЗаполнитьШапку(ДанныеЗаполнения) Экспорт
	
	Организация = ДанныеЗаполнения.Организация;
	
	ВалютаВзаиморасчетов 	= ДанныеЗаполнения.ВалютаВзаиморасчетов;
	КурсВзаиморасчетов		= ДанныеЗаполнения.КурсВзаиморасчетов;
	КратностьВзаиморасчетов	= ДанныеЗаполнения.КратностьВзаиморасчетов;
	
	ВалютаДокумента 		= ДанныеЗаполнения.ВалютаВзаиморасчетов;
	Курс					= ДанныеЗаполнения.КурсВзаиморасчетов;
	Кратность 				= ДанныеЗаполнения.КратностьВзаиморасчетов;
	
КонецПроцедуры	

//Процедура заполняет контрагентов по взаиморасчетам
//
Процедура ЗаполнитьТаблицуПлатежей(Контрагент)
	
	Платежи.Очистить();
	
	//Сбор остатков
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Взаиморасчеты.Контрагент,
	|	Взаиморасчеты.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, Организация = &Организация И Контрагент = &Контрагент) КАК Взаиморасчеты");

	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	
	Платежи.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТабельРабот") Тогда
		
		ЗаполнитьШапку(ДанныеЗаполнения);
		ЗаполнитьТаблицуПлатежей(ДанныеЗаполнения.Контрагент);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Удалим из списка проверяемых реквизитов валюту, если по организации не ведется 
	//валютный учет
	//Если НЕ ПолучитьФункциональнуюОпцию("ВалютныйУчет", Новый Структура("Организация", Организация)) Тогда
	//	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Валюта"));
	//КонецЕсли;	
	
КонецПроцедуры
