&НаКлиенте
Перем мОрганизация;

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если (мОрганизация <> Объект.Организация) и (ЗначениеЗаполнено(мОрганизация)) Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		ОтветПользователя = Вопрос("Изменена организация, изменить табличную часть?",Режим);
		
		Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
			Объект.Организация = мОрганизация;
			Возврат;
		КонецЕсли;
		
		Если Не ПустаяСтрока(Объект.Номер) Тогда
			Объект.Номер = "";
		КонецЕсли;

		ЗаполнитьТаблицуНачислений();
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	мОрганизация = Объект.Организация;
	
КонецПроцедуры

&НаСервере
//Процедура заполняет текущие задания программистов по которым отображены расчеты
//
Процедура ЗаполнитьТаблицуНачислений()
	
	Объект.Начисления.Очистить();
	
	//Сбор остатков
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ШкалаТарифовСрезПоследних.Сотрудник,
	|	ШкалаТарифовСрезПоследних.КоличествоЧасов КАК НеобходимоОтработать,
	|	ШкалаТарифовСрезПоследних.ЦенаЧасаСумма КАК Сумма,
	|	ШкалаТарифовСрезПоследних.ВалютаРасчета КАК Валюта,
	|	РасчетыССотрудникамиОстаткиИОбороты.КоличествоЧасовПриход КАК КоличествоЧасовЗатрачено,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РасчетыССотрудникамиОстаткиИОбороты.КоличествоЧасовПриход, 0) - ШкалаТарифовСрезПоследних.КоличествоЧасов > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименитьПремию
	|ИЗ
	|	РегистрСведений.ШкалаТарифов.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ВидРасчета = ЗНАЧЕНИЕ(Перечисление.ВидРасчета.Оклад)) КАК ШкалаТарифовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыССотрудниками.ОстаткиИОбороты(
	|				&НачДата,
	|				&КонДата,
	|				,
	|				,
	|				Организация = &Организация
	|					И ВидРасчета = ЗНАЧЕНИЕ(Перечисление.ВидРасчета.Оклад)) КАК РасчетыССотрудникамиОстаткиИОбороты
	|		ПО ШкалаТарифовСрезПоследних.Организация = РасчетыССотрудникамиОстаткиИОбороты.Организация
	|			И ШкалаТарифовСрезПоследних.Сотрудник = РасчетыССотрудникамиОстаткиИОбороты.Сотрудник
	|			И ШкалаТарифовСрезПоследних.ВидРасчета = РасчетыССотрудникамиОстаткиИОбороты.ВидРасчета
	|			И ШкалаТарифовСрезПоследних.ВалютаРасчета = РасчетыССотрудникамиОстаткиИОбороты.Валюта");

	Граница = ?(Объект.Проведен,Объект.Ссылка.МоментВремени(), Новый Граница(КонецДня(Объект.Дата), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НачДата",НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("КонДата",Граница);
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	Объект.Начисления.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	


&НаКлиенте
Процедура ЗаполнитьРасчеты(Команда)
	
	ЗаполнитьТаблицуНачислений();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() и Объект.Организация.Пустая() Тогда
		
		Объект.Организация = ЗаполнениеОсновныхПараметровДокументов.ПолучитьОсновнуюОрганизациюПоТекущемуПользователю();
		
	КонецЕсли;	
	
КонецПроцедуры
