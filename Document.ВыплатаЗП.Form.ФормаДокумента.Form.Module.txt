&НаКлиенте
Перем мОрганизация;

//////////////////////////////////////////////////////////////
// Обработчики событий

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПараметрыОпций = Новый Структура("Организация", Объект.Организация);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыОпций);
	
	Если (мОрганизация <> Объект.Организация) и (ЗначениеЗаполнено(мОрганизация)) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		ОтветПользователя = Вопрос("Изменена организация, изменить табличную часть?",Режим);
		
		Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
			Объект.Организация = мОрганизация;
			Возврат;
		КонецЕсли;
		
		Если Не ПустаяСтрока(Объект.Номер) Тогда
			Объект.Номер = "";
		КонецЕсли;

		ЗаполнитьТаблицуПлатежей();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() и Объект.Организация.Пустая() Тогда
		
		Объект.Организация = ЗаполнениеОсновныхПараметровДокументов.ПолучитьОсновнуюОрганизациюПоТекущемуПользователю();
		
	КонецЕсли;	
	
	Если Параметры.Ключ.Пустая() Тогда 
		
		ПараметрыОпций = Новый Структура("Организация", Объект.Организация);
		УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыОпций);
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПараметрыОпций = Новый Структура("Организация", Объект.Организация);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыОпций);
	
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыОпций = Новый Структура("Организация", Объект.Организация);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыОпций);
	
КонецПроцедуры

&НаСервере
//Процедура заполняет текущие расчеты программистов по которым есть остатки
//
Процедура ЗаполнитьТаблицуПлатежей()
	
	Объект.Платежи.Очистить();
	
	//Сбор остатков
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РасчетыССотрудникамиОстатки.Сотрудник,
	|	РасчетыССотрудникамиОстатки.ВидРасчета,
	|	РасчетыССотрудникамиОстатки.Валюта,
	|	СУММА(РасчетыССотрудникамиОстатки.СуммаОстаток) КАК Сумма,
	|	СУММА(РасчетыССотрудникамиОстатки.КоличествоЧасовОстаток) КАК КоличествоЧасов
	|ИЗ
	|	РегистрНакопления.РасчетыССотрудниками.Остатки(&МоментВремени, Организация = &Организация) КАК РасчетыССотрудникамиОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыССотрудникамиОстатки.Сотрудник,
	|	РасчетыССотрудникамиОстатки.ВидРасчета,
	|	РасчетыССотрудникамиОстатки.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(РасчетыССотрудникамиОстатки.СуммаОстаток) > 0");

	Граница = ?(Объект.Проведен,Объект.Ссылка.МоментВремени(), Новый Граница(КонецДня(Объект.Дата), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("МоментВремени",Граница);
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	Объект.Платежи.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнениеПлатежей(Команда)
	
	Если Объект.Платежи.Количество() > 0 Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		ОтветПользователя = Вопрос("Табличная часть будет очищена, продолжить?",Режим);
		
		Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;	
		
	КонецЕсли;
	
	ЗаполнитьТаблицуПлатежей();
	
КонецПроцедуры

&НаКлиенте
// Функция возвращает ссылку на текущую строку в списке платежей 
// 
// Параметры: 
//  Нет. 
// 
// Возвращаемое значение: 
//  
Функция ПолучитьТекущуюСтрокуПлатежа()
	Возврат Элементы.Платежи.ТекущиеДанные;
КонецФункции

&НаСервере
//Функция получает срез регистра сведений по шкале ставок
//	Возвращаемое значение: ВидРасчета
//
функция СрезШкалыСтавокСотрудников(Сотрудник) 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ШкалаТарифовСрезПоследних.ВидРасчета
	|ИЗ
	|	РегистрСведений.ШкалаТарифов.СрезПоследних(
	|			&ДатаСреза,
	|			Сотрудник = &Сотрудник
	|				И Организация = &Организация) КАК ШкалаТарифовСрезПоследних
	|");
	
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("ДатаСреза",КонецДня(Объект.Дата));
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Возврат Шапка.ВидРасчета;
	
КонецФункции	

&НаКлиенте
Процедура ПлатежиСотрудникПриИзменении(Элемент)
	
	ТекущиеДанныеСтроки = ПолучитьТекущуюСтрокуПлатежа();	
	ТекущиеДанныеСтроки.ВидРасчета = СрезШкалыСтавокСотрудников(ТекущиеДанныеСтроки.Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	мОрганизация = Объект.Организация;
	
КонецПроцедуры

