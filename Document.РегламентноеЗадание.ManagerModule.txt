
Процедура ПечатьКратко(ТабДокумент, Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегламентноеЗадание.Дата,
	|	РегламентноеЗадание.Номер,
	|	РегламентноеЗадание.Организация,
	|	РегламентноеЗадание.Контрагент,
	|	РегламентноеЗадание.ВалютаВзаиморасчетов
	|ИЗ
	|	Документ.РегламентноеЗадание КАК РегламентноеЗадание
	|ГДЕ
	|	РегламентноеЗадание.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегламентноеЗадание.АналитическийПризнак,
	|	РегламентноеЗадание.ТемаСобытия,
	|	РегламентноеЗадание.Куратор.Наименование + "" (куратор)"" КАК Куратор,
	|	РегламентноеЗадание.Сотрудник.Наименование + "" (исполнитель)"" КАК Исполнитель,
	|	РегламентноеЗадание.Важность,
	|	РегламентноеЗадание.Состояние,
	|	РегламентноеЗадание.КоличествоЧасовЗатрачено КАК КвоЧасовОбщее,
	|	РегламентноеЗадание.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.РегламентноеЗадание КАК РегламентноеЗадание
	|ГДЕ
	|	РегламентноеЗадание.Ссылка В(&Ссылка)
	|ИТОГИ
	|	СУММА(КвоЧасовОбщее),
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Куратор,
	|	Исполнитель";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();

	
	//-------------- ВЫВОД печатной формы --------------------
	Макет = Документы.РегламентноеЗадание.ПолучитьМакет("Кратко");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, Ссылка.Получить(0).Метаданные().Синоним);
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьШапка);
	
	ТабДокумент.НачатьАвтогруппировкуСтрок();

	КвоСтрок = 0;
	СуммаКПрописи = 0;
	ОбходОбщиеИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТекущийДокумент = Ссылка.Получить(0);
	Пока ОбходОбщиеИтоги.Следующий() Цикл
		СуммаКПрописи = СуммаКПрописи + ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ОбходОбщиеИтоги.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
														ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
		ВыборкаКуратор = ОбходОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаКуратор.Следующий() Цикл
			
			ОбластьКуратор = Макет.ПолучитьОбласть("Куратор");
			ОбластьКуратор.Параметры.Заполнить(ВыборкаКуратор);
			ОбластьКуратор.Параметры.Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ВыборкаКуратор.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
																ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
			ТабДокумент.Вывести(ОбластьКуратор, ВыборкаКуратор.Уровень());
			
			ВыборкаИсполнитель = ВыборкаКуратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаИсполнитель.Следующий() Цикл
				
				ОбластьИсполнитель = Макет.ПолучитьОбласть("Исполнитель");
				ОбластьИсполнитель.Параметры.Заполнить(ВыборкаИсполнитель);
				ОбластьИсполнитель.Параметры.Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ВыборкаИсполнитель.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
																		ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
				ТабДокумент.Вывести(ОбластьИсполнитель, ВыборкаИсполнитель.Уровень());
				
				БылаПечатьШапкиТаблицы = Ложь;
				ВыборкаДетали = ВыборкаИсполнитель.Выбрать();
				Пока ВыборкаДетали.Следующий() Цикл
					
					КвоСтрок = КвоСтрок + 1;
					
					Если НЕ БылаПечатьШапкиТаблицы Тогда
						
						ОбластьШапкиТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
						ТабДокумент.Вывести(ОбластьШапкиТаблицы,ВыборкаДетали.Уровень(),,Истина);
						
						БылаПечатьШапкиТаблицы = Истина;
						
					КонецЕсли;	
					
					ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Строка");
					ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
					ОбластьДетальныхЗаписей.Параметры.Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ВыборкаДетали.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
																					ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
					Если РольДоступна("Клиент") Тогда
						ОбластьДетальныхЗаписей.Параметры.Сумма = 0;
					КонецЕсли;
																
					ТабДокумент.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень(),,Ложь);
					
				КонецЦикла;	
				
			КонецЦикла;	
			
		КонецЦикла;	
		
		ОбластьВсего = Макет.ПолучитьОбласть("Всего");
		ОбластьВсего.Параметры.Заполнить(ОбходОбщиеИтоги);
		ОбластьВсего.Параметры.Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ОбходОбщиеИтоги.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
														ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
		Если РольДоступна("Клиент") Тогда
			ОбластьВсего.Параметры.Сумма = 0;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьВсего, ОбходОбщиеИтоги.Уровень());

	КонецЦикла;
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();

	Если РольДоступна("Клиент") Тогда
		СуммаКПрописи = 0;
	КонецЕсли;
		
	ОбластьИтоговаяСтрока = Макет.ПолучитьОбласть("ИтоговаяСтрока");
	ОбластьИтоговаяСтрока.Параметры.ИтоговаяСтрока =  "Всего наименований " + КвоСтрок 
									+ ", на сумму " + ОбщегоНазначения.ФорматСумм(СуммаКПрописи, Шапка.ВалютаВзаиморасчетов);
	ОбластьИтоговаяСтрока.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаВзаиморасчетов);
	ТабДокумент.Вывести(ОбластьИтоговаяСтрока);
	
	
КонецПроцедуры

Функция ПолучитьПараметрыСекцииШапкаРасширено(ДокЗадание)
	
	Параметры = Новый Структура();
	
	ЗапросПодразделений = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыОбслуживанияПодразделения.Подразделение
	|ИЗ
	|	Документ.РегламентноеЗадание.ОбъектыОбслуживания КАК ОбъектыОбслуживанияПодразделения
	|ГДЕ
	|	ОбъектыОбслуживанияПодразделения.Ссылка = &Ссылка
	|	И ОбъектыОбслуживанияПодразделения.Пометка
	|	И (НЕ ОбъектыОбслуживанияПодразделения.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))");
	
	ЗапросПодразделений.УстановитьПараметр("Ссылка",ДокЗадание);
	ВыборкаПодразделений = ЗапросПодразделений.Выполнить().Выбрать();
	СтрПодразделений = "";
	
	номПрохода = 0;
	Пока ВыборкаПодразделений.Следующий() Цикл
		номПрохода = номПрохода +1;
		СтрПодразделений = СтрПодразделений + Строка(ВыборкаПодразделений.Подразделение)+?(ВыборкаПодразделений.Количество()>номПрохода,Символы.ПС,"");
	КонецЦикла;	
	
	ЗапросОбъектов = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыОбслуживанияОбъекты.ОбъектОбслуживания
	|ИЗ
	|	Документ.РегламентноеЗадание.ОбъектыОбслуживания КАК ОбъектыОбслуживанияОбъекты
	|ГДЕ
	|	ОбъектыОбслуживанияОбъекты.Ссылка = &Ссылка
	|	И ОбъектыОбслуживанияОбъекты.Пометка
	|	И (НЕ ОбъектыОбслуживанияОбъекты.ОбъектОбслуживания = ЗНАЧЕНИЕ(Справочник.ОбъектыОбслуживания.ПустаяСсылка))");
	
	ЗапросОбъектов.УстановитьПараметр("Ссылка",ДокЗадание);
	ВыборкаОбъектов = ЗапросОбъектов.Выполнить().Выбрать();
	СтрОбъектов = "";
	
	номПрохода = 0;
	Пока ВыборкаОбъектов.Следующий() Цикл
		номПрохода = номПрохода +1;
		СтрОбъектов = СтрОбъектов + Строка(ВыборкаОбъектов.ОбъектОбслуживания)+?(ВыборкаОбъектов.Количество()>номПрохода,Символы.ПС,"");
	КонецЦикла;	
	
	Параметры.Вставить("ПредставлениеПодразделений",СтрПодразделений);
	Параметры.Вставить("ОбъектыОбслуживания",СтрОбъектов);
	Параметры.Вставить("КонтактныеЛица",ДокЗадание.КонтактноеЛицоКонтрагента);
	
	Возврат Параметры;
КонецФункции //ПолучитьПараметрыСекцииШапкаРасширено()	

Функция ПолучитьПараметрыСекцииСтрокаРасширено(ДокЗадание,РасчетнаяСумма)
	
	Параметры = Новый ТаблицаЗначений;
	Параметры.Колонки.Добавить("НомерСтроки");
	Параметры.Колонки.Добавить("ПечРешений");
	Параметры.Колонки.Добавить("КвоЧасовОбщее");
	Параметры.Колонки.Добавить("ДатаИсполнения");
	Параметры.Колонки.Добавить("Сумма");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТиповыеРешения.НомерСтроки,
	|	ТиповыеРешения.ТиповоеРешение.Наименование КАК Заголовок,
	|	ТиповыеРешения.ПодробноеОписание,
	|	ТиповыеРешения.КоличествоЧасовЗатрачено,
	|	ТиповыеРешения.ДатаИсполнения КАК ДатаИсполнения
	|ИЗ
	|	Документ.РегламентноеЗадание.ТиповыеРешения КАК ТиповыеРешения
	|ГДЕ
	|	ТиповыеРешения.Ссылка = &Ссылка
	|	И ТиповыеРешения.КоличествоЧасовЗатрачено > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаИсполнения");
	
	Запрос.УстановитьПараметр("Ссылка",ДокЗадание);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Параметры.Добавить();
		НоваяСтрока.НомерСтроки = Выборка.НомерСтроки;
		НоваяСтрока.ПечРешений  = Строка(Выборка.Заголовок) + Символы.ПС + Строка(СокрЛП(Выборка.ПодробноеОписание));
		НоваяСтрока.ДатаИсполнения = Выборка.ДатаИсполнения;
		НоваяСтрока.КвоЧасовОбщее = Выборка.КоличествоЧасовЗатрачено;
		НоваяСтрока.Сумма = РасчетнаяСумма*Выборка.КоличествоЧасовЗатрачено;
	КонецЦикла;	

	Возврат Параметры;
КонецФункции	

Процедура ПечатьПодробно(ТабДокумент, Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегламентноеЗадание.Дата,
	|	РегламентноеЗадание.Номер,
	|	РегламентноеЗадание.Организация,
	|	РегламентноеЗадание.Контрагент,
	|	РегламентноеЗадание.ВалютаВзаиморасчетов
	|ИЗ
	|	Документ.РегламентноеЗадание КАК РегламентноеЗадание
	|ГДЕ
	|	РегламентноеЗадание.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегламентноеЗадание.Ссылка КАК ДокСсылка,
	|	РегламентноеЗадание.АналитическийПризнак,
	|	РегламентноеЗадание.ТемаСобытия,
	|	РегламентноеЗадание.Куратор.Наименование + "" (куратор)"" КАК Куратор,
	|	РегламентноеЗадание.Сотрудник.Наименование + "" (исполнитель)"" КАК Исполнитель,
	|	РегламентноеЗадание.Важность,
	|	РегламентноеЗадание.Состояние,
	|	РегламентноеЗадание.КоличествоЧасовЗатрачено КАК КвоЧасовОбщее,
	|	РегламентноеЗадание.СуммаДокумента КАК Сумма,
	|	РегламентноеЗадание.Дата,
	|	РегламентноеЗадание.ДатаСдачиРабот,
	|	РегламентноеЗадание.ОписаниеЗадания,
	|	РегламентноеЗадание.ОписаниеРешения,
	|	РегламентноеЗадание.ВалютаДокумента,
	|	РегламентноеЗадание.Кратность,
	|	РегламентноеЗадание.Курс,
	|	РегламентноеЗадание.ВалютаВзаиморасчетов,
	|	РегламентноеЗадание.КурсВзаиморасчетов,
	|	РегламентноеЗадание.КратностьВзаиморасчетов
	|ИЗ
	|	Документ.РегламентноеЗадание КАК РегламентноеЗадание
	|ГДЕ
	|	РегламентноеЗадание.Ссылка В(&Ссылка)
	|ИТОГИ
	|	СУММА(КвоЧасовОбщее),
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Куратор,
	|	Исполнитель";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();

	
	//-------------- ВЫВОД печатной формы --------------------
	Макет = Документы.РегламентноеЗадание.ПолучитьМакет("Подробно");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, Ссылка.Получить(0).Метаданные().Синоним);
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьШапка);
	
	ТабДокумент.НачатьАвтогруппировкуСтрок();

	КвоСтрок = 0;
	СуммаКПрописи = 0;
	ОбходОбщиеИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТекущийДокумент = Ссылка.Получить(0);
	Пока ОбходОбщиеИтоги.Следующий() Цикл
		//СуммаКПрописи = СуммаКПрописи + ОбходОбщиеИтоги.Сумма;
		СуммаКПрописи = СуммаКПрописи + ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ОбходОбщиеИтоги.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
														ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
														
		Если РольДоступна("Клиент") Тогда
			СуммаКПрописи = 0;
		КонецЕсли;

		ВыборкаКуратор = ОбходОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаКуратор.Следующий() Цикл
			
			ОбластьКуратор = Макет.ПолучитьОбласть("Куратор");
			ОбластьКуратор.Параметры.Заполнить(ВыборкаКуратор);
			ОбластьКуратор.Параметры.Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ВыборкаКуратор.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
														ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
			ТабДокумент.Вывести(ОбластьКуратор, ВыборкаКуратор.Уровень());
			
			ВыборкаИсполнитель = ВыборкаКуратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаИсполнитель.Следующий() Цикл
				
				ОбластьИсполнитель = Макет.ПолучитьОбласть("Исполнитель");
				ОбластьИсполнитель.Параметры.Заполнить(ВыборкаИсполнитель);
				ОбластьИсполнитель.Параметры.Сумма = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ВыборкаИсполнитель.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
														ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
				ТабДокумент.Вывести(ОбластьИсполнитель, ВыборкаИсполнитель.Уровень());
				
				БылаПечатьШапкиТаблицы = Ложь;
				ВыборкаДетали = ВыборкаИсполнитель.Выбрать();
				Пока ВыборкаДетали.Следующий() Цикл
					
					КвоСтрок = КвоСтрок + 1;
					
					Если НЕ БылаПечатьШапкиТаблицы Тогда
						
						ОбластьШапкиТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
						ТабДокумент.Вывести(ОбластьШапкиТаблицы,ВыборкаДетали.Уровень(),,Истина);
						
						БылаПечатьШапкиТаблицы = Истина;
						
					КонецЕсли;	
					
					СуммаПерерасчета =  ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ВыборкаДетали.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
														ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
					
					ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Строка");
					ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
					ОбластьДетальныхЗаписей.Параметры.Сумма = СуммаПерерасчета;
					
					Если РольДоступна("Клиент") Тогда
						ОбластьДетальныхЗаписей.Параметры.Сумма = 0;
					КонецЕсли;
					
					ТабДокумент.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень(),,Ложь);
					
					//более детальная аналитика расположена по подразделениям и объектам обслуживания
					//а также этапы решения программиста
					ПараметрыШапки = ПолучитьПараметрыСекцииШапкаРасширено(ВыборкаДетали.ДокСсылка);
					ОбластьРасширеннойШапки = Макет.ПолучитьОбласть("ШапкаРасширено");
					ОбластьРасширеннойШапки.Параметры.Заполнить(ПараметрыШапки);
					ТабДокумент.Вывести(ОбластьРасширеннойШапки, ВыборкаДетали.Уровень()+1,,Ложь);
					
					//разрез по решениям
					СуммаПерерасчета = ?(ВыборкаДетали.КвоЧасовОбщее>0,СуммаПерерасчета/ВыборкаДетали.КвоЧасовОбщее,0);
					ПараметрыРешений = ПолучитьПараметрыСекцииСтрокаРасширено(ВыборкаДетали.ДокСсылка,СуммаПерерасчета);
					ОбластьРасширеннойСтроки = Макет.ПолучитьОбласть("СтрокаРасширено");
					Для Каждого СтрРешений Из ПараметрыРешений Цикл
						ОбластьРасширеннойСтроки.Параметры.Заполнить(СтрРешений);
						
						Если РольДоступна("Клиент") Тогда
							ОбластьРасширеннойСтроки.Параметры.Сумма = 0;
						КонецЕсли;

						ТабДокумент.Вывести(ОбластьРасширеннойСтроки, ВыборкаДетали.Уровень()+1,,Ложь);
					КонецЦикла;
					
				КонецЦикла;	
				
			КонецЦикла;	
			
		КонецЦикла;	
		
		СуммаПерерасчета = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(ОбходОбщиеИтоги.Сумма,ТекущийДокумент.ВалютаДокумента,ТекущийДокумент.ВалютаВзаиморасчетов,
														ТекущийДокумент.Курс,ТекущийДокумент.КурсВзаиморасчетов,ТекущийДокумент.Кратность,ТекущийДокумент.КратностьВзаиморасчетов);
		
		ОбластьВсего = Макет.ПолучитьОбласть("Всего");
		ОбластьВсего.Параметры.Заполнить(ОбходОбщиеИтоги);
		ОбластьВсего.Параметры.Сумма = СуммаПерерасчета;
		
		Если РольДоступна("Клиент") Тогда
			ОбластьВсего.Параметры.Сумма = 0;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьВсего, ОбходОбщиеИтоги.Уровень());

	КонецЦикла;
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();

	Если РольДоступна("Клиент") Тогда
		СуммаКПрописи = 0;
	КонецЕсли;
	
	ОбластьИтоговаяСтрока = Макет.ПолучитьОбласть("ИтоговаяСтрока");
	ОбластьИтоговаяСтрока.Параметры.ИтоговаяСтрока =  "Всего наименований " + КвоСтрок 
									+ ", на сумму " + ОбщегоНазначения.ФорматСумм(СуммаКПрописи, Шапка.ВалютаВзаиморасчетов);
	ОбластьИтоговаяСтрока.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаВзаиморасчетов);
	ТабДокумент.Вывести(ОбластьИтоговаяСтрока);
	
	
КонецПроцедуры
