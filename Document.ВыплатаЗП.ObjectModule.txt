

//Процедура заполняет текущие расчеты программистов по которым есть остатки
//
Процедура ЗаполнитьТаблицуПлатежей(МассивСотрудников)
	
	Платежи.Очистить();
	
	//Сбор остатков
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РасчетыССотрудникамиОстатки.Сотрудник,
	|	РасчетыССотрудникамиОстатки.ВидРасчета,
	|	РасчетыССотрудникамиОстатки.Валюта,
	|	СУММА(РасчетыССотрудникамиОстатки.СуммаОстаток) КАК Сумма,
	|	СУММА(РасчетыССотрудникамиОстатки.КоличествоЧасовОстаток) КАК КоличествоЧасов
	|ИЗ
	|	РегистрНакопления.РасчетыССотрудниками.Остатки(
	|			,
	|			Организация = &Организация
	|				И Сотрудник В (&Сотрудники)) КАК РасчетыССотрудникамиОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыССотрудникамиОстатки.Сотрудник,
	|	РасчетыССотрудникамиОстатки.ВидРасчета,
	|	РасчетыССотрудникамиОстатки.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(РасчетыССотрудникамиОстатки.СуммаОстаток) > 0");

	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Сотрудники",МассивСотрудников);
	
	Платежи.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	//ЗаполнитьТаблицуПлатежей()

//Заполнить шапку документа по документу основание
//
Процедура ЗаполнитьШапку(ДанныеЗаполнения) Экспорт
	
	Организация = ДанныеЗаполнения.Организация;
	
КонецПроцедуры	

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ 
// 

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтруктураШапкиДокумента = Новый Структура();
	СтруктураШапкиДокумента.Вставить("Организация",Организация);
	СтруктураШапкиДокумента.Вставить("ДокументСсылка",Ссылка);
	
	// Проверка остатков при оперативном проведении.
	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		Движения.РасчетыССотрудниками.КонтрольОстатков(ЭтотОбъект, "Платежи", СтруктураШапкиДокумента, Отказ);
	КонецЕсли;

	
	Если НЕ Отказ Тогда
		
		//Сбор остатков
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ВыплатаЗППлатежи.Ссылка.Организация,
		|	ВыплатаЗППлатежи.Сотрудник,
		|	ВыплатаЗППлатежи.ВидРасчета,
		|	ВыплатаЗППлатежи.Валюта,
		|	СУММА(ВыплатаЗППлатежи.Сумма) КАК Сумма,
		|	СУММА(ВыплатаЗППлатежи.КоличествоЧасов) КАК КоличествоЧасов
		|ИЗ
		|	Документ.ВыплатаЗП.Платежи КАК ВыплатаЗППлатежи
		|ГДЕ
		|	ВыплатаЗППлатежи.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыплатаЗППлатежи.Ссылка.Организация,
		|	ВыплатаЗППлатежи.Сотрудник,
		|	ВыплатаЗППлатежи.ВидРасчета,
		|	ВыплатаЗППлатежи.Валюта");
		
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		
		Результат = Запрос.Выполнить().Выгрузить();
		Результат.Колонки.Добавить("Период");
		Результат.Колонки.Добавить("ВидДвижения");
		
		Результат.ЗаполнитьЗначения(Дата,"Период");
		Результат.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход,"ВидДвижения");
		
		// Создание движения в регистре накопления  РасчетыССотрудниками
		Движения.РасчетыССотрудниками.Записывать = Истина;
		Движения.РасчетыССотрудниками.Загрузить(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РегламентноеЗадание") Тогда
		
		 МассивСотрудников = Новый Массив();
		 МассивСотрудников.Добавить(ДанныеЗаполнения.Сотрудник);
		 
		 ЗаполнитьШапку(ДанныеЗаполнения);
		 ЗаполнитьТаблицуПлатежей(МассивСотрудников);
		 
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТабельРабот") Тогда
		
		ЗапросПоТабелю = Новый Запрос("ВЫБРАТЬ
		                              |	ТабельРаботУслуги.ДокументРасчета.Сотрудник КАК Сотрудник
		                              |ИЗ
		                              |	Документ.ТабельРабот.Услуги КАК ТабельРаботУслуги
		                              |ГДЕ
		                              |	ТабельРаботУслуги.Ссылка = &Ссылка");
		ЗапросПоТабелю.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		РезультатЗапроса = ЗапросПоТабелю.Выполнить().Выгрузить();
		
		МассивСотрудников = РезультатЗапроса.ВыгрузитьКолонку("Сотрудник");
		
		ЗаполнитьШапку(ДанныеЗаполнения);
		ЗаполнитьТаблицуПлатежей(МассивСотрудников);
		
	КонецЕсли;
	
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Удалим из списка проверяемых реквизитов валюту, если по организации не ведется 
	//валютный учет
	//Если НЕ ПолучитьФункциональнуюОпцию("ВалютныйУчет", Новый Структура("Организация", Организация)) Тогда
	//	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Валюта"));
	//КонецЕсли;	
	
КонецПроцедуры
