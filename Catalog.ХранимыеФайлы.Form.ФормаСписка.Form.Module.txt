//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

&НаКлиенте
// Функция извлекает из отбора формы списка значение элемента "владелец"
// 
// Возвращаемое значение: 
// СправочникСсылка.Товары, либо Неопределено, если владелец не найден
Функция ПолучитьЗначениеВладельца()
	
	Для каждого Элемент из Список.Отбор.Элементы Цикл
		
		Если ТипЗнч(Элемент) =  Тип("ЭлементОтбораКомпоновкиДанных")
			 И (Строка(Элемент.ЛевоеЗначение) = "Владелец"
				ИЛИ Строка(Элемент.ЛевоеЗначение) = "Owner")
			 И Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			 
			Возврат Элемент.ПравоеЗначение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
// Процедура получает список файлов, которые переданы на сервер и создает соответствующие элементы справочника
Процедура СоздатьЭлементыСправочника(СписокЗагруженныхФайлов, Владелец)
	
	Для каждого ЗагруженныйФайл Из СписокЗагруженныхФайлов Цикл
		
		Файл = Новый Файл(ЗагруженныйФайл.Значение.Имя);
		ХранимыйФайл = Справочники.ХранимыеФайлы.СоздатьЭлемент();
		ХранимыйФайл.Владелец = Владелец;
		ХранимыйФайл.Наименование = Файл.Имя;
		ХранимыйФайл.ИмяФайла = Файл.Имя;
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ЗагруженныйФайл.Значение.Хранение);
		ХранимыйФайл.ДанныеФайла = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
		ХранимыйФайл.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
// Функция формирует массив описаний передаваемых файлов по выделенным строкам списка
Функция ОписаниеВыделенныхФайлов()
	
	ПередаваемыеФайлы = Новый Массив;
	Для каждого Строка Из Элементы.Список.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(Строка);
		Ссылка = ПолучитьНавигационнуюСсылку(Строка, "ДанныеФайла");
		ПутьКфайлу = ДанныеСтроки.Код + "\" + ДанныеСтроки.ИмяФайла;
		Описание = Новый ОписаниеПередаваемогоФайла(ПутьКфайлу, Ссылка);
		ПередаваемыеФайлы.Добавить(Описание);
		
	КонецЦикла;
	
	Возврат ПередаваемыеФайлы;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////// 
// Обработчики команд
//

&НаКлиенте
Процедура ЗагрузитьФайлы()
	
	Если ПодключитьРасширениеРаботыСФайлами() Тогда
	
		Форма = ПолучитьФорму("Справочник.ХранимыеФайлы.Форма.ФормаЗагрузкиФайлов");
		Форма.Владелец = ПолучитьЗначениеВладельца();
		
		Если Форма.ОткрытьМодально() = Истина Тогда
			СоздатьЭлементыСправочника(Форма.СписокЗагруженныхФайлов, Форма.Владелец);
			Элементы.Список.Обновить();
		КонецЕсли;
		
	Иначе
		
		Предупреждение(НСтр("ru = 'Данная возможность недоступна, так как не подключено расширение работы с файлами.'", "ru"));
		
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ОткрытьФайл()
	
	ПередаваемыеФайлы = ОписаниеВыделенныхФайлов();
	Если ПередаваемыеФайлы.Количество() > 0 Тогда
		Если ПодключитьРасширениеРаботыСФайлами() Тогда
			
			Каталог = РаботаСХранилищемОбщихНастроек.ПолучитьРабочийКаталог();
			Если Каталог = Неопределено ИЛИ Каталог = "" Тогда
				Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
				Диалог.Заголовок = НСтр("ru = 'Выбор каталога временного хранения файлов'", "ru");
				Если Диалог.Выбрать() = Ложь Тогда
					Возврат;
				КонецЕсли;
				Каталог = Диалог.Каталог;
				РаботаСХранилищемОбщихНастроек.СохранитьРабочийКаталог(Каталог);
			КонецЕсли;
			
			ПереданныеФайлы = Новый Массив;
			Если ПолучитьФайлы(ПередаваемыеФайлы, ПереданныеФайлы, Каталог, Ложь) Тогда
				
				Для каждого Описание Из ПереданныеФайлы Цикл
					ЗапуститьПриложение(Описание.Имя);
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			
			Для каждого Описание Из ПередаваемыеФайлы Цикл
				ПолучитьФайл(Описание.Хранение, Описание.Имя);
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
