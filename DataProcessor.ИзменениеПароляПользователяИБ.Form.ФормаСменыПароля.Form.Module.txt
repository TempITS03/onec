
&НаСервере
// Обработчик события "ПриСозданииНаСервере" формы.
// Считываются настройки пользователя ИБ
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИзменениеПароляДоступно = ПроверитьДоступностьСменыПароляПользователю();
	
	Если ИзменениеПароляДоступно = Истина Тогда
		// получаем полное имя пользователя по ссылке
		ИмяПользователя = ПараметрыСеанса.ТекущийПользователь.Код;
		ПолноеИмяПользователя = ПараметрыСеанса.ТекущийПользователь.Наименование;
		ПарольУстановлен = ПользователиИнформационнойБазы.ТекущийПользователь().ПарольУстановлен;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Обработчик события формы "ПриОткрытии".
// Если при формировании данных возникли ошибки, то необходимо
// сообщить о них пользователю.
//
Процедура ПриОткрытии(Отказ)
	
	Если      ИзменениеПароляДоступно = Неопределено Тогда
		Предупреждение(НСтр("ru = 'Не задан пользователь ИБ. Обратитесь к администратору системы.'"),,
		               НСтр("ru = 'Смена пароля'"));
		Отказ = Истина;
	ИначеЕсли ИзменениеПароляДоступно = Ложь Тогда
		Предупреждение(НСтр("ru = 'Изменение пароля не возможно. Обратитесь к администратору системы.'"),,
		               НСтр("ru = 'Смена пароля'"));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Функция проверяет флаг ЗапрещеноИзменятьПароль у текущего
// пользователя ИБ.
//
// Возвращаемое значение
// Истина        - смена пароля доступна
// Ложь          - смена пароля недоступна (либо потому что пользователю запрещено
//                 изменять пароль, либо потому что не установлена стандартая
//                 аутентификация)
// Неопределено  - ошибка
//
Функция ПроверитьДоступностьСменыПароляПользователю()
	
	Перем ИзменениеПароляДоступно;
	
	ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Если ПользовательИБ.ЗапрещеноИзменятьПароль Тогда
		ИзменениеПароляДоступно = Ложь;
	Иначе
		ИзменениеПароляДоступно = Истина;
	КонецЕсли;
	
	Если НЕ ПользовательИБ.АутентификацияСтандартная Тогда
		ИзменениеПароляДоступно = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПользовательИБ.Имя) Тогда
		ИзменениеПароляДоступно = Ложь;
	КонецЕсли;
	
	Возврат ИзменениеПароляДоступно;
	
КонецФункции

&НаКлиенте
// Обработчик события нажатия на кнопку "Сменить пароль".
// 
Процедура СменитьПарольВыполнить()
	
	ОчиститьСообщения();
	
	Если НовыйПарольПодтверждение = НовыйПароль Тогда
		Результат = СменитьПарольПользователяИБ();
		Если Результат Тогда
			ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			                       НСтр("ru = 'Пароль пользователя ""%1"" изменён.'"),
			                       ПолноеИмяПользователя );
			
			ПоказатьОповещениеПользователя(НСтр("ru = 'Изменение пароля'"),,
			                               ТекстОповещения);
			Закрыть();
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			                   НСтр("ru = 'Ошибка при записи пароля. Обратитесь к администратору системы.'"),
			                   Объект,
			                   "НовыйПароль");
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		                   НСтр("ru = 'Пароль и подтверждение пароля не совпадают.'"),
		                   Объект,
		                   "НовыйПарольПодтверждение");
		НовыйПароль = "";
		НовыйПарольПодтверждение = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
// Функция меняет пароль пользователя ИБ.
// При невозможности записать пользоателя вызывается исключение
// с описанием ошибки.
//
// Возвращаемое значение
// Истина - пароль был изменен
// Ложь   - пароль не был изменен (произошла ошибка записи)
//
Функция СменитьПарольПользователяИБ()
	
	ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Если ПользовательИБ.ЗапрещеноИзменятьПароль Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПользовательИБ.Пароль = НовыйПароль;
	
	ПользовательИБ.Записать();
	
	Возврат Истина;
	
КонецФункции
